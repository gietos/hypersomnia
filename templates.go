// +build ignore

package main

import (
	"bytes"
	"github.com/tdewolff/minify/v2"
	"github.com/tdewolff/minify/v2/css"
	"github.com/tdewolff/minify/v2/html"
	"github.com/tdewolff/minify/v2/js"
	"os"
	"regexp"
	"text/template"
)

type Data struct {
	Contents string
}

func main() {
	src := `// Code generated by go generate; DO NOT EDIT.
package templates; const Index = ` + "`{{ .Contents }}`"
	h, _ := os.Open("templates/index.html")
	defer h.Close()

	m := minify.New()
	m.AddFunc("text/css", css.Minify)
	m.AddFunc("text/html", html.Minify)
	m.AddFuncRegexp(regexp.MustCompile("^(application|text)/(x-)?(java|ecma)script$"), js.Minify)

	buf := new(bytes.Buffer)
	if err := m.Minify("text/html", buf, h); err != nil {
		panic(err)
	}

	f, _ := os.Create("templates/index.go")
	defer f.Close()
	tmpl, _ := template.New("").Parse(src)
	tmpl.Execute(f, Data{Contents: buf.String()})
}
